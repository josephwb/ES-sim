setwd("/Users/michaelharvey/git/ES-sim")#
getwd()#
#
library(ape)#
library(diversitree)#
source("./R/essim.R")
trees250sdd <- read.tree("./data/trees_Core/trees250sdd.txt")#
states250sdd <- read.table("./data/traits_Core/trees250sdd_states.txt", header=TRUE, row.names=1)#
#
essim.p <- vector()#
q.p <- vector()
i <- 1#
	print(i)#
	trait <- states250sdd[,i]#
	names(trait) <- row.names(states250sdd)#
	# ES-sim#
#
	essim.res <- essim(trees250sdd[[i]], trait, nsim = 1000)#
	essim.p <- c(essim.p, essim.res[2])
source("./R/other_scripts/essim_kendall.R")#
	res <- essim_kendall(trees250sdd[[i]], trait, nsim = 1000)#
	source("./R/other_scripts/essim_olsr2.R")#
	res <- essim_olsr2(trees250sdd[[i]], trait, nsim = 1000)#
	source("./R/other_scripts/essim_olsslope.R")#
	res <- essim_olsslope(trees250sdd[[i]], trait, nsim = 1000)#
	source("./R/other_scripts/ndsim.R")#
	res <- ndsim(trees250sdd[[i]], trait, nsim = 1000)#
	source("./R/other_scripts/tbsim.R")#
	res <- tbsim(trees250sdd[[i]], trait, nsim = 1000)#
	source("./R/other_scripts/essim_pglsr2.R")#
	res <- ndsim(trees250sdd[[i]], trait, nsim = 1000)#
	source("./R/other_scripts/essim_pglsr2.R")#
	res <- ndsim(trees250sdd[[i]], trait, nsim = 1000)
res <- essim_pglsr2(trees250sdd[[i]], trait, nsim = 1000)
source("./R/other_scripts/essim_pglsslope.R")
res <- essim_pglsslope(trees250sdd[[i]], trait, nsim = 1000)
phy <- trees250sdd[[i]]
nsim = 1000
a = 0.5
if(missing(is)) { # If inverse splits statistics not provided, calculate it#
		rootnode <- length(phy$tip.label) + 1#
		is <- numeric(length(phy$tip.label))#
		for (i in 1:length(is)){#
			node <- i#
			index <- 1#
			qx <- 0#
			while (node != rootnode){#
				el <- phy$edge.length[phy$edge[,2] == node]#
				node <- phy$edge[,1][phy$edge[,2] == node]			#
				qx <- qx + el* (1 / (1/a)^(index-1))			#
				index <- index + 1#
			}#
			is[i] <- 1/qx#
		}		#
	names(is) <- phy$tip.label#
	}
rootnode <- length(phy$tip.label) + 1#
		is <- numeric(length(phy$tip.label))#
		for (i in 1:length(is)){#
			node <- i#
			index <- 1#
			qx <- 0#
			while (node != rootnode){#
				el <- phy$edge.length[phy$edge[,2] == node]#
				node <- phy$edge[,1][phy$edge[,2] == node]			#
				qx <- qx + el* (1 / (1/a)^(index-1))			#
				index <- index + 1#
			}#
			is[i] <- 1/qx#
		}		#
	names(is) <- phy$tip.label
is <- log(is[phy$tip.label]) # log transform
trait <- trait[phy$tip.label]
res <- pgls(is ~ trait)
source("./R/other_scripts/essim_pglsr2.R")
res <- essim_pglsr2(trees250sdd[[i]], trait, nsim = 1000)
i <- 1
res <- essim_pglsr2(trees250sdd[[i]], trait, nsim = 1000)
